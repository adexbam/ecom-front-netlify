{"version":3,"sources":["config.js","auth/index.js","core/Menu.js","core/cartHelpers.js","core/Layout.js","user/Signup.js","user/Signin.js","core/apiCore.js","core/ShowImage.js","core/Card.js","core/Search.js","core/Home.js","auth/PrivateRoute.js","user/UserDashboard.js","user/apiUser.js","user/AdminDashboard.js","admin/AddCategory.js","admin/apiAdmin.js","admin/AddProduct.js","core/Checkbox.js","core/RadioBox.js","core/fixedPrices.js","core/Shop.js","core/Product.js","core/Checkout.js","core/Cart.js","Routes.js","index.js"],"names":["API","process","isAuthenticated","window","localStorage","getItem","JSON","parse","isActive","history","path","location","pathname","color","withRouter","_ref","React","createElement","className","Link","style","to","length","user","role","Fragment","cursor","onClick","next","removeItem","fetch","concat","method","then","response","console","log","catch","err","signout","push","Layout","title","description","children","Menu","Signup","values","setValues","useState","name","email","password","error","success","handleChange","event","[object Object]","target","value","clickSubmit","preventDefault","headers","Accept","Content-Type","body","stringify","json","signup","data","display","onChange","type","Signin","loading","redirectToReferrer","signin","authenticate","setItem","Redirect","getProducts","sortBy","getCategories","getFilteredProducts","skip","limit","filters","arguments","undefined","ShowImage","item","url","src","_id","alt","maxHeight","maxWidth","Card","product","showViewProductButton","showAddToCartButton","cartUpdate","showRemoveProductButton","setRun","f","run","redirect","setRedirect","count","setCount","addToCart","cart","Array","from","Set","map","p","id","find","addItem","productId","updateItem","i","shouldRedirect","substring","price","category","moment","createdAt","fromNow","quantity","showStock","showViewButton","showAddToCartBtn","splice","showRemoveButton","showCartUpdateOptions","Search","setData","categories","search","results","searched","useEffect","searchData","params","query","queryString","list","searchSubmit","e","onSubmit","c","key","placeholder","border","searchMessage","searchedProducts","Home","productsBySell","setProductsBySell","productsByArrival","setProductsByArrival","setError","PrivateRoute","component","Component","rest","Route","Object","assign","render","props","state","Dashboard","setHistory","token","init","userId","getPurchaseHistory","Authorization","h","products","purchaseHistory","AdminDashboard","AddCategory","setName","setSuccess","createCategory","showSuccess","showError","autoFocus","required","AddProduct","shipping","photo","createdProduct","redirectToProfile","formData","FormData","files","set","createProduct","accept","Checkbox","handleFilters","checked","setCheked","handleToggle","currentCategoryId","indexOf","newCheckedCategoryId","RadioBox","prices","setValue","array","Shop","myFilters","setMyFilters","setCategories","setLimit","setSkip","size","setSize","filteredResults","setFilteredResults","loadFilteredResults","newFilters","loadMore","toSkip","filterBy","priceValues","handlePrice","parseInt","Product","setProduct","relatedProduct","setRelatedProduct","loadSingleProduct","read","listRelated","match","Checkout","clientToken","instance","address","getToken","getBraintreeClientToken","handleAddress","getTotal","reduce","currentValue","nextValue","deliveryAddress","buy","nonce","requestPaymentMethod","paymentData","paymentMethodNonce","amount","processPayment","createOrderData","transaction_id","transaction","createOrder","order","emptyCart","message","showDropIn","onBlur","DropIn","options","authorization","paypal","flow","onInstance","showLoading","Cart","items","setItems","showItems","Routes","BrowserRouter","Switch","exact","AdminRoute","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9cd38c24.chunk.js","sourcesContent":["const API = process.env.REACT_APP_API_URL;\n\nexport default API","import API from '../config';\n\nexport const signup = user => {\n    //console.log(name, email, password);\n    return fetch(`${API}/signup`, {\n        method: \"POST\",\n        headers: {\n            Accept: 'application/json',\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err => {\n        console.log(err);\n    });\n};\n\nexport const signin = user => {\n    //console.log(name, email, password);\n    return fetch(`${API}/signin`, {\n        method: \"POST\",\n        headers: {\n            Accept: 'application/json',\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err => {\n        console.log(err);\n    });\n};\n\nexport const authenticate = (data, next) => {\n    if (typeof window !== \"undefined\") {\n        localStorage.setItem('jwt', JSON.stringify(data));\n        next();\n    }\n};\n\nexport const signout = next => {\n    if (typeof window !== \"undefined\") {\n        localStorage.removeItem('jwt');\n        next();\n        return fetch(`${API}/signout`, {\n            method: \"GET\"\n        }).then(response => {\n            console.log(\"signout\", response);\n        }).catch(err => console.log(err));\n    }\n};\n\nexport const isAuthenticated = () => {\n    if(typeof window == \"undefined\") {\n        return false;\n    }\n    if (localStorage.getItem(\"jwt\")) {\n        return JSON.parse(localStorage.getItem(\"jwt\"));\n    } else {\n        return false;\n    }\n};\n\n","import React, { Fragment } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { signout, isAuthenticated } from \"../auth\";\nimport { itemTotal } from \"./cartHelpers\";\n\nconst isActive = (history, path) => {\n    if (history.location.pathname === path) {\n        return { color: \"#ff9900\" };\n    } else {\n        return { color: \"#ffffff\" };\n    }\n};\n\nconst Menu = ({ history }) => (\n    <div>\n        <ul className=\"nav nav-tabs bg-primary\">\n            <li className=\"nav-item\">\n                <Link\n                    className=\"nav-link\"\n                    style={isActive(history, \"/\")}\n                    to=\"/\"\n                >\n                    Home\n                </Link>\n            </li>\n\n            <li className=\"nav-item\">\n                <Link\n                    className=\"nav-link\"\n                    style={isActive(history, \"/shop\")}\n                    to=\"/shop\"\n                >\n                    Shop\n                </Link>\n            </li>\n\n            <li className=\"nav-item\">\n                <Link\n                    className=\"nav-link\"\n                    style={isActive(history, \"/cart\")}\n                    to=\"/cart\"\n                >\n                    Cart{\" \"}\n                    <sup>\n                        <small className=\"cart-badge\">{itemTotal()}</small>\n                    </sup>\n                </Link>\n            </li>\n\n            {isAuthenticated() && isAuthenticated().user.role === 0 && (\n                <li className=\"nav-item\">\n                    <Link\n                        className=\"nav-link\"\n                        style={isActive(history, \"/user/dashboard\")}\n                        to=\"/user/dashboard\"\n                    >\n                        Dashboard\n                    </Link>\n                </li>\n            )}\n\n            {isAuthenticated() && isAuthenticated().user.role === 1 && (\n                <li className=\"nav-item\">\n                    <Link\n                        className=\"nav-link\"\n                        style={isActive(history, \"/admin/dashboard\")}\n                        to=\"/admin/dashboard\"\n                    >\n                        Dashboard\n                    </Link>\n                </li>\n            )}\n\n            {!isAuthenticated() && (\n                <Fragment>\n                    <li className=\"nav-item\">\n                        <Link\n                            className=\"nav-link\"\n                            style={isActive(history, \"/signin\")}\n                            to=\"/signin\"\n                        >\n                            Signin\n                        </Link>\n                    </li>\n\n                    <li className=\"nav-item\">\n                        <Link\n                            className=\"nav-link\"\n                            style={isActive(history, \"/signup\")}\n                            to=\"/signup\"\n                        >\n                            Signup\n                        </Link>\n                    </li>\n                </Fragment>\n            )}\n\n            {isAuthenticated() && (\n                <li className=\"nav-item\">\n                    <span\n                        className=\"nav-link\"\n                        style={{ cursor: \"pointer\", color: \"#ffffff\" }}\n                        onClick={() =>\n                            signout(() => {\n                                history.push(\"/\");\n                            })\n                        }\n                    >\n                        Signout\n                    </span>\n                </li>\n            )}\n        </ul>\n    </div>\n);\n\nexport default withRouter(Menu);","export const addItem = (item = [], count = 0, next = f => f) => {\n    let cart = [];\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n        cart.push({\n            ...item,\n            count: 1\n        });\n\n        // remove duplicates\n        // build an Array from new Set and turn it back into array using Array.from\n        // so that later we can re-map it\n        // new set will only allow unique values in it\n        // so pass the ids of each object/product\n        // If the loop tries to add the same value again, it'll get ignored\n        // ...with the array of ids we got on when first map() was used\n        // run map() on it again and return the actual product from the cart\n\n        cart = Array.from(new Set(cart.map(p => p._id))).map(id => {\n            return cart.find(p => p._id === id);\n        });\n\n        localStorage.setItem('cart', JSON.stringify(cart));\n        next();\n    }\n};\n\nexport const itemTotal = () => {\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            return JSON.parse(localStorage.getItem('cart')).length;\n        }\n    }\n    return 0;\n};\n\nexport const getCart = () => {\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            return JSON.parse(localStorage.getItem('cart'));\n        }\n    }\n    return [];\n};\n\nexport const updateItem = (productId, count) => {\n    let cart = [];\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n\n        cart.map((product, i) => {\n            if (product._id === productId) {\n                cart[i].count = count;\n            }\n        });\n\n        localStorage.setItem('cart', JSON.stringify(cart));\n    }\n};\n\nexport const removeItem = productId => {\n    let cart = [];\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n\n        cart.map((product, i) => {\n            if (product._id === productId) {\n                cart.splice(i, 1);\n            }\n        });\n\n        localStorage.setItem('cart', JSON.stringify(cart));\n    }\n    return cart;\n};\n\nexport const emptyCart = next => {\n    if (typeof window !== 'undefined') {\n        localStorage.removeItem('cart');\n        next();\n    }\n};","import React from 'react';\nimport Menu from './Menu';\nimport '../styles.css';\n\nconst Layout = ({title = \"Title\", description = \"description\", className, children}) => (\n    <div>\n        <Menu />\n        <div className=\"jumbotron\">\n            <h2>{title}</h2>\n            <p className=\"lead\">{description}</p>\n        </div>\n        <div className={className}>{children}</div>\n\n    </div>\n);\n\nexport default Layout;","import React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport Layout from '../core/Layout';\nimport {signup} from '../auth';\n\nconst Signup = () => {\n    const [values, setValues] = useState({\n        name: '',\n        email: '',\n        password: '',\n        error: '',\n        success: false\n    });\n\n    const { name, email, password, success, error } = values;\n\n    const handleChange = name => event => {\n        setValues({ ...values, error: false, [name]: event.target.value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        signup({name, email, password})\n        .then(data => {\n            if(data.error) {\n                setValues({...values, error: data.error, success: false})\n            } else {\n                setValues({\n                    ...values,\n                    name: \"\",\n                    email: \"\",\n                    password: \"\",\n                    error:\"\",\n                    success: true\n                })\n            }\n        })\n    };\n\n    const signUpForm = () => (\n        <form>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Email</label>\n                <input onChange={handleChange('email')} type=\"email\" className=\"form-control\" value={email} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Password</label>\n                <input onChange={handleChange('password')} type=\"password\" className=\"form-control\" value={password} />\n            </div>\n            <button onClick={clickSubmit} className=\"btn btn-primary\">Submit</button>\n        </form>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className=\"alert alert-info\" style={{ display: success ? '' : 'none' }}>\n            New account created, please <Link to='/signin'>sign in</Link>\n        </div>\n    );\n\n    return (\n        <Layout \n            title = \"Signup Page\" \n            description= \"Fred Ecommerce App sign up\"\n            className=\"container col-md-4 offset-md-2\"\n        >\n            {showSuccess()}\n            {showError()}\n            {signUpForm()}\n        </Layout>\n    );\n};\n\nexport default Signup;","import React, {useState} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport Layout from '../core/Layout';\nimport {signin, authenticate, isAuthenticated} from '../auth';\n\nconst Signin = () => {\n    const [values, setValues] = useState({\n        email: 'enoma@dt.eu',\n        password: 'rrrrrrrrr9',\n        error: '',\n        loading: false,\n        redirectToReferrer: false\n    });\n\n    const { email, password, loading, error, redirectToReferrer } = values;\n    const {user} = isAuthenticated();\n\n    const handleChange = name => event => {\n        setValues({ ...values, error: false, [name]: event.target.value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({...values, error: false, loading:true})\n        signin({email, password})\n        .then(data => {\n            if(data.error) {\n                setValues({...values, error: data.error, loading: false})\n            } else {\n                authenticate(data, () => {\n                    setValues({\n                        ...values,\n                        redirectToReferrer: true\n                    });\n                });\n            }\n        })\n    };\n\n    const signUpForm = () => (\n        <form>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Email</label>\n                <input onChange={handleChange('email')} type=\"email\" className=\"form-control\" value={email} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Password</label>\n                <input onChange={handleChange('password')} type=\"password\" className=\"form-control\" value={password} />\n            </div>\n            <button onClick={clickSubmit} className=\"btn btn-primary\">Submit</button>\n        </form>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showLoading = () => (\n        loading && (<div className=\"alert alert-info\"><h2>Loading</h2></div>)\n    );\n\n    const redirectUser = () => {\n        if (redirectToReferrer) {\n            if (user && user.role === 1) {\n                return <Redirect to=\"/admin/dashboard\" />;\n            } else {\n                return <Redirect to=\"/user/dashboard\" />;\n            }\n        }\n        if (isAuthenticated()) {\n            return <Redirect to=\"/\" />;\n        }\n    };\n\n    return (\n        <Layout \n            title = \"Signin Page\" \n            description= \"Fred Ecommerce App sign in\"\n            className=\"container col-md-4 offset-md-2\"\n        >\n            {showLoading()}\n            {showError()}\n            {signUpForm()}\n            {redirectUser()}\n        </Layout>\n    );\n};\n\nexport default Signin;","import API from \"../config\";\nimport queryString from \"query-string\";\n\nexport const getProducts = sortBy => {\n    return fetch(`${API}/products?sortBy=${sortBy}&order=desc&limit=6`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getCategories = () => {\n    console.log(API)\n    return fetch(`${API}/categories`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getFilteredProducts = (skip, limit, filters = {}) => {\n    const data = {\n        limit,\n        skip,\n        filters\n    };\n    return fetch(`${API}/products/by/search`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\nexport const list = params => {\n    const query = queryString.stringify(params);\n    console.log(\"query\", query);\n    return fetch(`${API}/products/search?${query}`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const read = productId => {\n    return fetch(`${API}/product/${productId}`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const listRelated = productId => {\n    return fetch(`${API}/products/related/${productId}`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getBraintreeClientToken = (userId, token) => {\n    return fetch(`${API}/braintree/getToken/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const processPayment = (userId, token, paymentData) => {\n    return fetch(`${API}/braintree/payment/${userId}`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(paymentData)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const createOrder = (userId, token, createOrderData) => {\n    return fetch(`${API}/order/create/${userId}`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ order: createOrderData })\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};","import React from \"react\";\nimport API from \"../config\";\n\nconst ShowImage = ({ item, url }) => (\n    <div className=\"product-img\">\n        <img\n            src={`${API}/${url}/photo/${item._id}`}\n            alt={item.name}\n            className=\"mb-3\"\n            style={{ maxHeight: \"100%\", maxWidth: \"100%\" }}\n        />\n    </div>\n);\n\nexport default ShowImage;","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport ShowImage from './ShowImage';\nimport moment from 'moment';\nimport { addItem, updateItem, removeItem } from './cartHelpers';\n\nconst Card = ({\n    product,\n    showViewProductButton = true,\n    showAddToCartButton = true,\n    cartUpdate = false,\n    showRemoveProductButton = false,\n    setRun = f => f,\n    run = undefined\n  // changeCartSize\n}) => {\n    const [redirect, setRedirect] = useState(false);\n    const [count, setCount] = useState(product.count);\n\n    const showViewButton = showViewProductButton => {\n        return (\n        showViewProductButton && (\n            <Link to={`/product/${product._id}`} className=\"mr-2\">\n            <button className=\"btn btn-outline-primary mt-2 mb-2 card-btn-1\">View Product</button>\n            </Link>\n        )\n        );\n    };\n    const addToCart = () => {\n        // console.log('added');\n        addItem(product, setRedirect(true));\n    };\n\n    const shouldRedirect = redirect => {\n        if (redirect) {\n        return <Redirect to=\"/cart\" />;\n        }\n    };\n\n    const showAddToCartBtn = showAddToCartButton => {\n        return (\n        showAddToCartButton && (\n            <button onClick={addToCart} className=\"btn btn-outline-warning mt-2 mb-2 card-btn-1  \">\n            Add to cart\n            </button>\n        )\n        );\n    };\n\n    const showStock = quantity => {\n        return quantity > 0 ? (\n        <span className=\"badge badge-primary badge-pill\">In Stock </span>\n        ) : (\n        <span className=\"badge badge-primary badge-pill\">Out of Stock </span>\n        );\n    };\n\n    const handleChange = productId => event => {\n        setRun(!run); // run useEffect in parent Cart\n        setCount(event.target.value < 1 ? 1 : event.target.value);\n        if (event.target.value >= 1) {\n        updateItem(productId, event.target.value);\n        }\n    };\n\n    const showCartUpdateOptions = cartUpdate => {\n        return (\n        cartUpdate && (\n            <div>\n            <div className=\"input-group mb-3\">\n                <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\">Adjust Quantity</span>\n                </div>\n                <input type=\"number\" className=\"form-control\" value={count} onChange={handleChange(product._id)} />\n            </div>\n            </div>\n        )\n        );\n    };\n    const showRemoveButton = showRemoveProductButton => {\n        return (\n        showRemoveProductButton && (\n            <button\n            onClick={() => {\n                removeItem(product._id);\n                setRun(!run); // run useEffect in parent Cart\n            }}\n            className=\"btn btn-outline-danger mt-2 mb-2\"\n            >\n            Remove Product\n            </button>\n        )\n        );\n    };\n    return (\n        <div className=\"card \">\n        <div className=\"card-header card-header-1 \">{product.name}</div>\n        <div className=\"card-body\">\n            {shouldRedirect(redirect)}\n            <ShowImage item={product} url=\"product\" />\n            <p className=\"card-p  mt-2\">{product.description.substring(0, 100)} </p>\n            <p className=\"card-p black-10\">$ {product.price}</p>\n            <p className=\"black-9\">Category: {product.category && product.category.name}</p>\n            <p className=\"black-8\">Added on {moment(product.createdAt).fromNow()}</p>\n            {showStock(product.quantity)}\n            <br />\n\n            {showViewButton(showViewProductButton)}\n\n            {showAddToCartBtn(showAddToCartButton)}\n\n            {showRemoveButton(showRemoveProductButton)}\n\n            {showCartUpdateOptions(cartUpdate)}\n        </div>\n        </div>\n    );\n};\n\nexport default Card;","import React, { useState, useEffect } from \"react\";\nimport { getCategories, list } from \"./apiCore\";\nimport Card from \"./Card\";\n\nconst Search = () => {\n    const [data, setData] = useState({\n        categories: [],\n        category: \"\",\n        search: \"\",\n        results: [],\n        searched: false\n    });\n\n    const { categories, category, search, results, searched } = data;\n\n    const loadCategories = () => {\n        getCategories().then(data => {\n            if (data.error) {\n                console.log(data.error);\n            } else {\n                setData({ ...data, categories: data });\n            }\n        });\n    };\n\n    useEffect(() => {\n        loadCategories();\n    }, []);\n\n    const searchData = () => {\n        // console.log(search, category);\n        if (search) {\n            list({ search: search || undefined, category: category }).then(\n                response => {\n                    if (response.error) {\n                        console.log(response.error);\n                    } else {\n                        setData({ ...data, results: response, searched: true });\n                    }\n                }\n            );\n        }\n    };\n\n    const searchSubmit = e => {\n        e.preventDefault();\n        searchData();\n    };\n\n    const handleChange = name => event => {\n        setData({ ...data, [name]: event.target.value, searched: false });\n    };\n\n    const searchMessage = (searched, results) => {\n        if (searched && results.length > 0) {\n            return `Found ${results.length} products`;\n        }\n        if (searched && results.length < 1) {\n            return `No products found`;\n        }\n    };\n\n    const searchedProducts = (results = []) => {\n        return (\n            <div>\n                <h2 className=\"mt-4 mb-4\">\n                    {searchMessage(searched, results)}\n                </h2>\n\n                <div className=\"row\">\n                    {results.map((product, i) => (\n                        <div className=\"col-4 mb-3\">\n                            <Card key={i} product={product} />\n                        </div>\n                    ))}\n                </div>\n            </div>\n        );\n    };\n\n    const searchForm = () => (\n        <form onSubmit={searchSubmit}>\n            <span className=\"input-group-text\">\n                <div className=\"input-group input-group-lg\">\n                    <div className=\"input-group-prepend\">\n                        <select\n                            className=\"btn mr-2\"\n                            onChange={handleChange(\"category\")}\n                        >\n                            <option value=\"All\">All</option>\n                            {categories.map((c, i) => (\n                                <option key={i} value={c._id}>\n                                    {c.name}\n                                </option>\n                            ))}\n                        </select>\n                    </div>\n\n                    <input\n                        type=\"search\"\n                        className=\"form-control\"\n                        onChange={handleChange(\"search\")}\n                        placeholder=\"Search by name\"\n                    />\n                </div>\n                <div\n                    className=\"btn input-group-append\"\n                    style={{ border: \"none\" }}\n                >\n                    <button className=\"input-group-text\">Search</button>\n                </div>\n            </span>\n        </form>\n    );\n\n    return (\n        <div className=\"row\">\n            <div className=\"container mb-3\">{searchForm()}</div>\n            <div className=\"container-fluid mb-3\">\n                {searchedProducts(results)}\n            </div>\n        </div>\n    );\n};\n\nexport default Search;","import React, {useState, useEffect} from 'react';\nimport Layout from './Layout';\nimport { getProducts } from './apiCore';\nimport Card from './Card';\nimport Search from './Search';\n\nconst Home = () => {\n    const [productsBySell, setProductsBySell] = useState([]);\n    const [productsByArrival, setProductsByArrival] = useState([]);\n    const [error, setError] = useState(false);\n\n    const loadProductsBySell = () => {\n        getProducts('sold').then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setProductsBySell(data);\n            }\n        });\n    };\n\n    const loadProductsByArrival = () => {\n        getProducts('createdAt').then(data => {\n            console.log(data);\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setProductsByArrival(data);\n            }\n        });\n    };\n\n    useEffect(() => {\n        loadProductsByArrival();\n        loadProductsBySell();\n    }, []);\n\n    return (\n        <Layout\n        title=\"FullStack React Node MongoDB Ecommerce App\"\n        description=\"Node React E-commerce App\"\n        className=\"container-fluid\"\n    >\n        <Search />\n        <h2 className=\"mb-4\">New Arrivals</h2>\n        <div className=\"row\">\n            {productsByArrival.map((product, i) => (\n                <div key={i} className=\"col-4 mb-3\">\n                    <Card product={product} />\n                </div>\n            ))}\n        </div>\n\n        <h2 className=\"mb-4\">Best Sellers</h2>\n        <div className=\"row\">\n            {productsBySell.map((product, i) => (\n                <div key={i} className=\"col-4 mb-3\">\n                    <Card product={product} />\n                </div>\n            ))}\n        </div>\n    </Layout>\n    )\n}\nexport default Home;","import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isAuthenticated } from \"./index\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route\n        {...rest}\n        render={props =>\n            isAuthenticated() ? (\n                <Component {...props} />\n            ) : (\n                <Redirect\n                    to={{\n                        pathname: \"/signin\",\n                        state: { from: props.location }\n                    }}\n                />\n            )\n        }\n    />\n);\n\nexport default PrivateRoute;","import React, { useState, useEffect } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\nimport { getPurchaseHistory } from \"./apiUser\";\nimport moment from \"moment\";\n\nconst Dashboard = () => {\n    const [history, setHistory] = useState([]);\n\n    const {\n        user: { _id, name, email, role }\n    } = isAuthenticated();\n    const token = isAuthenticated().token;\n\n    const init = (userId, token) => {\n        getPurchaseHistory(userId, token).then(data => {\n            if (data.error) {\n                console.log(data.error);\n            } else {\n                setHistory(data);\n            }\n        });\n    };\n\n    useEffect(() => {\n        init(_id, token);\n    }, []);\n\n    const userLinks = () => {\n        return (\n            <div className=\"card\">\n                <h4 className=\"card-header\">User Links</h4>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to=\"/cart\">\n                            My Cart\n                        </Link>\n                    </li>\n                    <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to={`/profile/${_id}`}>\n                            Update Profile\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        );\n    };\n\n    const userInfo = () => {\n        return (\n            <div className=\"card mb-5\">\n                <h3 className=\"card-header\">User Information</h3>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">{name}</li>\n                    <li className=\"list-group-item\">{email}</li>\n                    <li className=\"list-group-item\">\n                        {role === 1 ? \"Admin\" : \"Registered User\"}\n                    </li>\n                </ul>\n            </div>\n        );\n    };\n\n    const purchaseHistory = history => {\n        return (\n            <div className=\"card mb-5\">\n                <h3 className=\"card-header\">Purchase history</h3>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">\n                        {history.map((h, i) => {\n                            return (\n                                <div>\n                                    <hr />\n                                    {h.products.map((p, i) => {\n                                        return (\n                                            <div key={i}>\n                                                <h6>Product name: {p.name}</h6>\n                                                <h6>\n                                                    Product price: ${p.price}\n                                                </h6>\n                                                <h6>\n                                                    Purchased date:{\" \"}\n                                                    {moment(\n                                                        p.createdAt\n                                                    ).fromNow()}\n                                                </h6>\n                                            </div>\n                                        );\n                                    })}\n                                </div>\n                            );\n                        })}\n                    </li>\n                </ul>\n            </div>\n        );\n    };\n\n    return (\n        <Layout\n            title=\"Dashboard\"\n            description={`G'day ${name}!`}\n            className=\"container-fluid\"\n        >\n            <div className=\"row\">\n                <div className=\"col-3\">{userLinks()}</div>\n                <div className=\"col-9\">\n                    {userInfo()}\n                    {purchaseHistory(history)}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default Dashboard;","import API from \"../config\";\n\nexport const read = (userId, token) => {\n    return fetch(`${API}/user/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const update = (userId, token, user) => {\n    return fetch(`${API}/user/${userId}`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(user)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const updateUser = (user, next) => {\n    if (typeof window !== \"undefined\") {\n        if (localStorage.getItem(\"jwt\")) {\n            let auth = JSON.parse(localStorage.getItem(\"jwt\"));\n            auth.user = user;\n            localStorage.setItem(\"jwt\", JSON.stringify(auth));\n            next();\n        }\n    }\n};\n\nexport const getPurchaseHistory = (userId, token) => {\n    return fetch(`${API}/orders/by/user/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};","import React from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\n\nconst AdminDashboard = () => {\n    const {\n        user: { _id, name, email, role }\n    } = isAuthenticated();\n\n    const adminLinks = () => {\n        return (\n            <div className=\"card\">\n                <h4 className=\"card-header\">Admin Links</h4>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to=\"/create/category\">\n                            Create Category\n                        </Link>\n                    </li>\n                    <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to=\"/create/product\">\n                            Create Product\n                        </Link>\n                    </li>\n                    <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to=\"/admin/orders\">\n                            View Orders\n                        </Link>\n                    </li>\n                    <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to=\"/admin/products\">\n                            Manage Products\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        );\n    };\n\n    const adminInfo = () => {\n        return (\n            <div className=\"card mb-5\">\n                <h3 className=\"card-header\">User Information</h3>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">{name}</li>\n                    <li className=\"list-group-item\">{email}</li>\n                    <li className=\"list-group-item\">\n                        {role === 1 ? \"Admin\" : \"Registered User\"}\n                    </li>\n                </ul>\n            </div>\n        );\n    };\n\n    return (\n        <Layout\n            title=\"Dashboard\"\n            description={`G'day ${name}!`}\n            className=\"container-fluid\"\n        >\n            <div className=\"row\">\n                <div className=\"col-3\">{adminLinks()}</div>\n                <div className=\"col-9\">{adminInfo()}</div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default AdminDashboard;","import React, { useState } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\nimport { createCategory } from \"./apiAdmin\";\n\nconst AddCategory = () => {\n    const [name, setName] = useState(\"\");\n    const [error, setError] = useState(false);\n    const [success, setSuccess] = useState(false);\n\n    // destructure user and token from localstorage\n    const { user, token } = isAuthenticated();\n\n    const handleChange = e => {\n        setError(\"\");\n        setName(e.target.value);\n    };\n\n    const clickSubmit = e => {\n        e.preventDefault();\n        setError(\"\");\n        setSuccess(false);\n        // make request to api to create category\n        createCategory(user._id, token, { name }).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setError(\"\");\n                setSuccess(true);\n            }\n        });\n    };\n\n    const newCategoryFom = () => (\n        <form onSubmit={clickSubmit}>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    onChange={handleChange}\n                    value={name}\n                    autoFocus\n                    required\n                />\n            </div>\n            <button className=\"btn btn-outline-primary\">Create Category</button>\n        </form>\n    );\n\n    const showSuccess = () => {\n        if (success) {\n            return <h3 className=\"text-success\">{name} is created</h3>;\n        }\n    };\n\n    const showError = () => {\n        if (error) {\n            return <h3 className=\"text-danger\">Category should be unique</h3>;\n        }\n    };\n\n    const goBack = () => (\n        <div className=\"mt-5\">\n            <Link to=\"/admin/dashboard\" className=\"text-warning\">\n                Back to Dashboard\n            </Link>\n        </div>\n    );\n\n    return (\n        <Layout\n            title=\"Add a new category\"\n            description={`Welcome ${user.name}, ready to add a new category?`}\n        >\n            <div className=\"row\">\n                <div className=\"col-md-8 offset-md-2\">\n                    {showSuccess()}\n                    {showError()}\n                    {newCategoryFom()}\n                    {goBack()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default AddCategory;","import API from '../config';\n\nexport const createCategory = (userId, token, category) => {\n    return fetch(`${API}/category/create/${userId}`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(category)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\nexport const updateCategory = (categoryId, userId, token, category) => {\n    return fetch(`${API}/category/${categoryId}/${userId}`, {\n        method: 'PUT',\n        headers: {\n            // content type?\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(category)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const createProduct = (userId, token, product) => {\n    return fetch(`${API}/product/create/${userId}`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: product\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\nexport const getCategory = categoryId => {\n    return fetch(`${API}/category/${categoryId}`, {\n        method: 'GET'\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getCategories = () => {\n    return fetch(`${API}/categories`, {\n        method: 'GET'\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const listOrders = (userId, token) => {\n    return fetch(`${API}/order/list/${userId}`, {\n        method: 'GET',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getStatusValues = (userId, token) => {\n    return fetch(`${API}/order/status-values/${userId}`, {\n        method: 'GET',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const updateOrderStatus = (userId, token, orderId, status) => {\n    return fetch(`${API}/order/${orderId}/status/${userId}`, {\n        method: 'PUT',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ status, orderId })\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n/**\n * to perform crud on product\n * get all products\n * get a single product\n * update single product\n * delete single product\n */\n\nexport const getProducts = () => {\n    return fetch(`${API}/products?limit=undefined`, {\n        method: 'GET'\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const deleteProduct = (productId, userId, token) => {\n    return fetch(`${API}/product/${productId}/${userId}`, {\n        method: 'DELETE',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getProduct = productId => {\n    return fetch(`${API}/product/${productId}`, {\n        method: 'GET'\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const updateProduct = (productId, userId, token, product) => {\n    return fetch(`${API}/product/${productId}/${userId}`, {\n        method: 'PUT',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: product\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};","import React, { useState, useEffect } from 'react';\nimport Layout from '../core/Layout';\nimport { isAuthenticated } from '../auth';\n//import { Link } from 'react-router-dom';\nimport { createProduct, getCategories } from './apiAdmin';\n\nconst AddProduct = () => {\n    const [values, setValues] = useState({\n        name: '',\n        description: '',\n        price: '',\n        categories: [],\n        category: '',\n        shipping: '',\n        quantity: '',\n        photo: '',\n        loading: false,\n        error: '',\n        createdProduct: '',\n        redirectToProfile: false,\n        formData: ''\n    });\n\n    const { user, token } = isAuthenticated();\n    const {\n        name,\n        description,\n        price,\n        categories,\n        category,\n        shipping,\n        quantity,\n        loading,\n        error,\n        createdProduct,\n        redirectToProfile,\n        formData\n    } = values;\n\n    // load categories and set form data\n    const init = () => {\n        getCategories().then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    categories: data,\n                    formData: new FormData()\n                });\n            }\n        });\n    };\n\n    useEffect(() => {\n        init();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const handleChange = name => event => {\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\n        formData.set(name, value);\n        setValues({ ...values, [name]: value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: '', loading: true });\n\n        createProduct(user._id, token, formData).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    name: '',\n                    description: '',\n                    photo: '',\n                    price: '',\n                    quantity: '',\n                    loading: false,\n                    createdProduct: data.name\n                });\n            }\n        });\n    };\n\n    const newPostForm = () => (\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\n            <h4>Post Photo</h4>\n            <div className=\"form-group\">\n                <label className=\"btn btn-secondary\">\n                    <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" />\n                </label>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Description</label>\n                <textarea onChange={handleChange('description')} className=\"form-control\" value={description} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Price</label>\n                <input onChange={handleChange('price')} type=\"number\" className=\"form-control\" value={price} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Category</label>\n                <select onChange={handleChange('category')} className=\"form-control\">\n                    <option>Please select</option>\n                    {categories &&\n                        categories.map((c, i) => (\n                            <option key={i} value={c._id}>\n                                {c.name}\n                            </option>\n                        ))}\n                </select>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Shipping</label>\n                <select onChange={handleChange('shipping')} className=\"form-control\">\n                    <option>Please select</option>\n                    <option value=\"0\">No</option>\n                    <option value=\"1\">Yes</option>\n                </select>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Quantity</label>\n                <input onChange={handleChange('quantity')} type=\"number\" className=\"form-control\" value={quantity} />\n            </div>\n\n            <button className=\"btn btn-outline-primary\">Create Product</button>\n        </form>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className=\"alert alert-info\" style={{ display: createdProduct ? '' : 'none' }}>\n            <h2>{`${createdProduct}`} is created!</h2>\n        </div>\n    );\n\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-success\">\n                <h2>Loading...</h2>\n            </div>\n        );\n\n    return (\n        <Layout title=\"Add a new product\" description={`G'day ${user.name}, ready to add a new product?`}>\n            <div className=\"row\">\n                <div className=\"col-md-8 offset-md-2\">\n                    {showLoading()}\n                    {showSuccess()}\n                    {showError()}\n                    {newPostForm()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default AddProduct;","import React, { useState } from \"react\";\n\nconst Checkbox = ({ categories, handleFilters }) => {\n    const [checked, setCheked] = useState([]);\n\n    const handleToggle = c => () => {\n        // return the first index or -1\n        const currentCategoryId = checked.indexOf(c);\n        const newCheckedCategoryId = [...checked];\n        // if currently checked was not already in checked state > push\n        // else pull/take off\n        if (currentCategoryId === -1) {\n            newCheckedCategoryId.push(c);\n        } else {\n            newCheckedCategoryId.splice(currentCategoryId, 1);\n        }\n        // console.log(newCheckedCategoryId);\n        setCheked(newCheckedCategoryId);\n        handleFilters(newCheckedCategoryId);\n    };\n\n    return categories.map((c, i) => (\n        <li key={i} className=\"list-unstyled\">\n            <input\n                onChange={handleToggle(c._id)}\n                value={checked.indexOf(c._id === -1)}\n                type=\"checkbox\"\n                className=\"form-check-input\"\n            />\n            <label className=\"form-check-label\">{c.name}</label>\n        </li>\n    ));\n};\n\nexport default Checkbox;","import React, { useState } from \"react\";\n\nconst RadioBox = ({ prices, handleFilters }) => {\n    const [value, setValue] = useState(0);\n\n    const handleChange = event => {\n        handleFilters(event.target.value);\n        setValue(event.target.value);\n    };\n\n    return prices.map((p, i) => (\n        <div key={i}>\n            <input\n                onChange={handleChange}\n                value={`${p._id}`}\n                name={p}\n                type=\"radio\"\n                className=\"mr-2 ml-4\"\n            />\n            <label className=\"form-check-label\">{p.name}</label>\n        </div>\n    ));\n};\n\nexport default RadioBox;","export const prices = [\n    {\n        _id: 0,\n        name: \"Any\",\n        array: []\n    },\n    {\n        _id: 1,\n        name: \"$0 to $9\",\n        array: [0, 9]\n    },\n    {\n        _id: 2,\n        name: \"$10 to $19\",\n        array: [10, 19]\n    },\n    {\n        _id: 3,\n        name: \"$20 to $29\",\n        array: [20, 29]\n    },\n    {\n        _id: 4,\n        name: \"$30 to $39\",\n        array: [20, 29]\n    },\n    {\n        _id: 5,\n        name: \"More than $40\",\n        array: [40, 99]\n    }\n];","import React, { useState, useEffect } from \"react\";\nimport Layout from \"./Layout\";\nimport Card from \"./Card\";\nimport { getCategories, getFilteredProducts } from \"./apiCore\";\nimport Checkbox from \"./Checkbox\";\nimport RadioBox from \"./RadioBox\";\nimport { prices } from \"./fixedPrices\";\n\nconst Shop = () => {\n    const [myFilters, setMyFilters] = useState({\n        filters: { category: [], price: [] }\n    });\n    const [categories, setCategories] = useState([]);\n    const [error, setError] = useState(false);\n    const [limit, setLimit] = useState(6);\n    const [skip, setSkip] = useState(0);\n    const [size, setSize] = useState(0);\n    const [filteredResults, setFilteredResults] = useState([]);\n\n    const init = () => {\n        getCategories().then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setCategories(data);\n            }\n        });\n    };\n\n    const loadFilteredResults = newFilters => {\n        // console.log(newFilters);\n        getFilteredProducts(skip, limit, newFilters).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setFilteredResults(data.data);\n                setSize(data.size);\n                setSkip(0);\n            }\n        });\n    };\n\n    const loadMore = () => {\n        let toSkip = skip + limit;\n        // console.log(newFilters);\n        getFilteredProducts(toSkip, limit, myFilters.filters).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setFilteredResults([...filteredResults, ...data.data]);\n                setSize(data.size);\n                setSkip(toSkip);\n            }\n        });\n    };\n\n    const loadMoreButton = () => {\n        return (\n            size > 0 &&\n            size >= limit && (\n                <button onClick={loadMore} className=\"btn btn-warning mb-5\">\n                    Load more\n                </button>\n            )\n        );\n    };\n\n    useEffect(() => {\n        init();\n        loadFilteredResults(skip, limit, myFilters.filters);\n    }, []);\n\n    const handleFilters = (filters, filterBy) => {\n        // console.log(\"SHOP\", filters, filterBy);\n        const newFilters = { ...myFilters };\n        newFilters.filters[filterBy] = filters;\n\n        if (filterBy === \"price\") {\n            let priceValues = handlePrice(filters);\n            newFilters.filters[filterBy] = priceValues;\n        }\n        loadFilteredResults(myFilters.filters);\n        setMyFilters(newFilters);\n    };\n\n    const handlePrice = value => {\n        const data = prices;\n        let array = [];\n\n        for (let key in data) {\n            if (data[key]._id === parseInt(value)) {\n                array = data[key].array;\n            }\n        }\n        return array;\n    };\n\n    return (\n        <Layout\n            title=\"Shop Page\"\n            description=\"Search and find your choice\"\n            className=\"container-fluid\"\n        >\n            <div className=\"row\">\n                <div className=\"col-4\">\n                    <h4>Filter by categories</h4>\n                    <ul>\n                        <Checkbox\n                            categories={categories}\n                            handleFilters={filters =>\n                                handleFilters(filters, \"category\")\n                            }\n                        />\n                    </ul>\n\n                    <h4>Filter by price range</h4>\n                    <div>\n                        <RadioBox\n                            prices={prices}\n                            handleFilters={filters =>\n                                handleFilters(filters, \"price\")\n                            }\n                        />\n                    </div>\n                </div>\n\n                <div className=\"col-8\">\n                    <h2 className=\"mb-4\">Products</h2>\n                    <div className=\"row\">\n                        {filteredResults.map((product, i) => (\n                            <div key={i} className=\"col-4 mb-3\">\n                                <Card product={product} />\n                            </div>\n                        ))}\n                    </div>\n                    <hr />\n                    {loadMoreButton()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default Shop;","import React, { useState, useEffect } from 'react';\nimport Layout from './Layout';\nimport { read, listRelated } from './apiCore';\nimport Card from './Card';\n\nconst Product = props => {\n    const [product, setProduct] = useState({});\n    const [relatedProduct, setRelatedProduct] = useState([]);\n    const [error, setError] = useState(false);\n\n    const loadSingleProduct = productId => {\n        read(productId).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setProduct(data);\n                // fetch related products\n                listRelated(data._id).then(data => {\n                    if (data.error) {\n                        setError(data.error);\n                    } else {\n                        setRelatedProduct(data);\n                    }\n                });\n            }\n        });\n    };\n\n    useEffect(() => {\n        const productId = props.match.params.productId;\n        loadSingleProduct(productId);\n    }, [props]);\n\n    return (\n        <Layout\n            title={product && product.name}\n            description={product && product.description && product.description.substring(0, 100)}\n            className=\"container-fluid\"\n        >\n            <div className=\"row\">\n                <div className=\"col-8\">\n                    {product && product.description && <Card product={product} showViewProductButton={false} />}\n                </div>\n\n                <div className=\"col-4\">\n                    <h4>Related products</h4>\n                    {relatedProduct.map((p, i) => (\n                        <div className=\"mb-3\" key={i}>\n                            <Card product={p} />\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default Product;","import React, { useState, useEffect } from 'react';\nimport { getProducts, getBraintreeClientToken, processPayment, createOrder } from './apiCore';\nimport { emptyCart } from './cartHelpers';\nimport Card from './Card';\nimport { isAuthenticated } from '../auth';\nimport { Link } from 'react-router-dom';\n// import \"braintree-web\"; // not using this package\nimport DropIn from 'braintree-web-drop-in-react';\n\nconst Checkout = ({ products, setRun = f => f, run = undefined }) => {\n    const [data, setData] = useState({\n        loading: false,\n        success: false,\n        clientToken: null,\n        error: '',\n        instance: {},\n        address: ''\n    });\n\n    const userId = isAuthenticated() && isAuthenticated().user._id;\n    const token = isAuthenticated() && isAuthenticated().token;\n\n    const getToken = (userId, token) => {\n        getBraintreeClientToken(userId, token).then(data => {\n            if (data.error) {\n                console.log(data.error);\n                setData({ ...data, error: data.error });\n            } else {\n                console.log(data);\n                setData({ clientToken: data.clientToken });\n            }\n        });\n    };\n\n    useEffect(() => {\n        getToken(userId, token);\n    }, []);\n\n    const handleAddress = event => {\n        setData({ ...data, address: event.target.value });\n    };\n\n    const getTotal = () => {\n        return products.reduce((currentValue, nextValue) => {\n            return currentValue + nextValue.count * nextValue.price;\n        }, 0);\n    };\n\n    const showCheckout = () => {\n        return isAuthenticated() ? (\n            <div>{showDropIn()}</div>\n        ) : (\n            <Link to=\"/signin\">\n                <button className=\"btn btn-primary\">Sign in to checkout</button>\n            </Link>\n        );\n    };\n\n    let deliveryAddress = data.address;\n\n    const buy = () => {\n        setData({ loading: true });\n        // send the nonce to your server\n        // nonce = data.instance.requestPaymentMethod()\n        let nonce;\n        let getNonce = data.instance\n            .requestPaymentMethod()\n            .then(data => {\n                // console.log(data);\n                nonce = data.nonce;\n                // once you have nonce (card type, card number) send nonce as 'paymentMethodNonce'\n                // and also total to be charged\n                // console.log(\n                //     \"send nonce and total to process: \",\n                //     nonce,\n                //     getTotal(products)\n                // );\n                const paymentData = {\n                    paymentMethodNonce: nonce,\n                    amount: getTotal(products)\n                };\n\n                processPayment(userId, token, paymentData)\n                    .then(response => {\n                        console.log(response);\n                        // empty cart\n                        // create order\n\n                        const createOrderData = {\n                            products: products,\n                            transaction_id: response.transaction.id,\n                            amount: response.transaction.amount,\n                            address: deliveryAddress\n                        };\n\n                        createOrder(userId, token, createOrderData)\n                            .then(response => {\n                                emptyCart(() => {\n                                    setRun(!run); // run useEffect in parent Cart\n                                    console.log('payment success and empty cart');\n                                    setData({\n                                        loading: false,\n                                        success: true\n                                    });\n                                });\n                            })\n                            .catch(error => {\n                                console.log(error);\n                                setData({ loading: false });\n                            });\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        setData({ loading: false });\n                    });\n            })\n            .catch(error => {\n                // console.log(\"dropin error: \", error);\n                setData({ ...data, error: error.message });\n            });\n    };\n\n    const showDropIn = () => (\n        <div onBlur={() => setData({ ...data, error: '' })}>\n            {data.clientToken !== null && products.length > 0 ? (\n                <div>\n                    <div className=\"gorm-group mb-3\">\n                        <label className=\"text-muted\">Delivery address:</label>\n                        <textarea\n                            onChange={handleAddress}\n                            className=\"form-control\"\n                            value={data.address}\n                            placeholder=\"Type your delivery address here...\"\n                        />\n                    </div>\n\n                    <DropIn\n                        options={{\n                            authorization: data.clientToken,\n                            paypal: {\n                                flow: 'vault'\n                            }\n                        }}\n                        onInstance={instance => (data.instance = instance)}\n                    />\n                    <button onClick={buy} className=\"btn btn-success btn-block\">\n                        Pay\n                    </button>\n                </div>\n            ) : null}\n        </div>\n    );\n\n    const showError = error => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = success => (\n        <div className=\"alert alert-info\" style={{ display: success ? '' : 'none' }}>\n            Thanks! Your payment was successful!\n        </div>\n    );\n\n    const showLoading = loading => loading && <h2 className=\"text-danger\">Loading...</h2>;\n\n    return (\n        <div>\n            <h2>Total: ${getTotal()}</h2>\n            {showLoading(data.loading)}\n            {showSuccess(data.success)}\n            {showError(data.error)}\n            {showCheckout()}\n        </div>\n    );\n};\n\nexport default Checkout;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Layout from './Layout';\nimport { getCart } from './cartHelpers';\nimport Card from './Card';\nimport Checkout from './Checkout';\n\nconst Cart = () => {\n    const [items, setItems] = useState([]);\n    const [run, setRun] = useState(false);\n\n    useEffect(() => {\n        setItems(getCart());\n    }, [run]);\n\n    const showItems = items => {\n        return (\n            <div>\n                <h2>Your cart has {`${items.length}`} items</h2>\n                <hr />\n                {items.map((product, i) => (\n                    <Card\n                        key={i}\n                        product={product}\n                        showAddToCartButton={false}\n                        cartUpdate={true}\n                        showRemoveProductButton={true}\n                        setRun={setRun}\n                        run={run}\n                    />\n                ))}\n            </div>\n        );\n    };\n\n    const noItemsMessage = () => (\n        <h2>\n            Your cart is empty. <br /> <Link to=\"/shop\">Continue shopping</Link>\n        </h2>\n    );\n\n    return (\n        <Layout\n            title=\"Shopping Cart\"\n            description=\"Manage your cart items. Add remove checkout or continue shopping.\"\n            className=\"container-fluid\"\n        >\n            <div className=\"row\">\n                <div className=\"col-6\">{items.length > 0 ? showItems(items) : noItemsMessage()}</div>\n\n                <div className=\"col-6\">\n                    <h2 className=\"mb-4\">Your cart summary</h2>\n                    <hr />\n                    <Checkout products={items} setRun={setRun} run={run} />\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default Cart;","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Signup from './user/Signup';\nimport Signin from './user/Signin';\nimport Home from './core/Home';\n//import Menu from './core/Menu';\nimport PrivateRoute from './auth/PrivateRoute';\nimport Dashboard from './user/UserDashboard';\nimport AdminRoute from './auth/PrivateRoute';\nimport AdminDashboard from './user/AdminDashboard';\nimport AddCategory from './admin/AddCategory';\nimport AddProduct from './admin/AddProduct';\nimport Shop from './core/Shop';\nimport Product from './core/Product';\nimport Cart from './core/Cart';\n\n\nconst Routes = () => {\n    return (\n        <BrowserRouter>\n            {/*Menu*/}\n            <Switch>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/shop\" exact component={Shop} />\n                <Route path=\"/signin\" exact component = {Signin} />\n                <Route path=\"/signup\" exact component = {Signup} />\n                <PrivateRoute path=\"/user/dashboard\" exact component={Dashboard} />\n                <AdminRoute path=\"/admin/dashboard\" exact component={AdminDashboard} />\n                <AdminRoute path=\"/create/category\" exact component={AddCategory} />\n                <AdminRoute path=\"/create/product\" exact component={AddProduct} />\n                <Route path=\"/product/:productId\" exact component={Product} />\n                <Route path=\"/cart\" exact component={Cart} />\n            </Switch>\n        </BrowserRouter>\n    );\n};\n\nexport default Routes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './Routes';\n\nReactDOM.render(<Routes />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}